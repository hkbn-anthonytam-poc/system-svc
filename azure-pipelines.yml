# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  name: UK Agent Pools
  #vmImage: ubuntu-latest

steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.17'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'
  condition: always()
  
# - task: CopyFiles@2
  # inputs:
    # Contents: '**'
    # TargetFolder: '$(build.artifactstagingdirectory)'
  # condition: succeeded()

- task: Docker@2
  inputs:
  # Container Repository
    #containerRegistry: # string. Container registry. 
    #repository: # string. Optional. Use when command != login && command != logout && command != start && command != stop. Container repository. 
  # Commands
    command: 'buildAndPush' # 'buildAndPush' | 'build' | 'push' | 'login' | 'logout' | 'start' | 'stop'. Required. Command. Default: buildAndPush.
    Dockerfile: '**/Dockerfile' # string. Required when command = build || command = buildAndPush. Dockerfile. Default: **/Dockerfile.
    #buildContext: '**' # string. Optional. Use when command = build || command = buildAndPush. Build context. Default: **.
    #tags: '$(Build.BuildId)' # string. Optional. Use when command = build || command = push || command = buildAndPush. Tags. Default: $(Build.BuildId).
    #arguments: # string. Optional. Use when command != login && command != logout && command != buildAndPush. Arguments. 
    #addPipelineData: true # boolean. Add Pipeline metadata to image(s). Default: true.
    #addBaseImageData: true # boolean. Add base image metadata to image(s). Default: true.
    #container: # string. Optional. Use when command = start || command = stop. Container.
- script: docker build -t system-svc . 
  condition: always()   
# - task: PublishBuildArtifacts@1
  # inputs:
    # PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    # ArtifactName: 'drop'
    # publishLocation: 'Container'
  # condition: succeeded()
# - task: Maven@3
  # inputs:
    # mavenPomFile: 'pom.xml'
    # mavenOptions: '-Xmx3072m'
    # javaHomeOption: 'JDKVersion'
    # jdkVersionOption: '1.17'
    # jdkArchitectureOption: 'x64'
    # mavenAuthenticateFeed: true
    # publishJUnitResults: false
    # testResultsFiles: '**/surefire-reports/TEST-*.xml'
    # goals: 'deploy'
    # options: '-s settings.xml'

